<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Demo de Bots - ChatBoyAI</title>
  <style>
    :root {
      --primary: #4f46e5;
      --secondary: #6366f1;
      --bg: #f9fafb;
      --white: #ffffff;
      --gray-100: #f3f4f6;
      --text-dark: #111827;
      --shadow: rgba(0, 0, 0, 0.1);
    }

    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: var(--bg);
      color: var(--text-dark);
      line-height: 1.6;
      overflow-x: hidden;
    }

    a {
      text-decoration: none;
      color: inherit;
    }

    header {
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 2rem;
      background: linear-gradient(to right, var(--primary), var(--secondary));
      color: white;
      text-align: center;
    }

    header h1 {
      font-size: 2.5rem;
      margin-bottom: 0.5rem;
    }

    header p {
      font-size: 1.1rem;
      max-width: 600px;
      margin: 0 auto;
    }

    .cta-button {
      margin-top: 1.5rem;
      background-color: var(--white);
      color: var(--primary);
      padding: 0.75rem 1.5rem;
      border-radius: 9999px;
      font-weight: bold;
      cursor: pointer;
      transition: background-color 0.3s ease, transform 0.2s ease;
    }

    .cta-button:hover {
      background-color: #e0e7ff;
      transform: scale(1.05);
    }

    .bot-selection {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
      gap: 2rem;
      padding: 2rem;
      max-width: 1200px;
      margin: 0 auto;
    }

    .bot-card {
      background-color: var(--white);
      border-radius: 1rem;
      padding: 1.5rem;
      box-shadow: 0 4px 20px var(--shadow);
      text-align: center;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      position: relative;
      overflow: hidden;
    }

    .bot-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 30px rgba(0,0,0,0.15);
    }

    .bot-icon {
      font-size: 2.5rem;
      margin-bottom: 1rem;
      color: var(--primary);
    }

    .bot-name {
      font-size: 1.2rem;
      font-weight: bold;
      margin-bottom: 0.5rem;
    }

    .bot-action {
      margin-top: 1rem;
      background-color: var(--primary);
      color: var(--white);
      padding: 0.5rem 1rem;
      border-radius: 9999px;
      font-size: 0.9rem;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    .bot-action:hover {
      background-color: var(--secondary);
    }

    .chat-demo {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.6);
      display: none;
      justify-content: center;
      align-items: center;
      z-index: 1000;
    }

    .chat-window {
      background-color: var(--white);
      border-radius: 1rem;
      padding: 1.5rem;
      width: 90%;
      max-width: 500px;
      max-height: 80vh;
      overflow-y: auto;
      position: relative;
      animation: fadeInUp 0.5s ease-in-out;
    }

    .chat-close {
      position: absolute;
      top: 1rem;
      right: 1rem;
      font-size: 1.2rem;
      cursor: pointer;
      color: var(--text-light);
      transition: color 0.3s ease;
    }

    .chat-close:hover {
      color: var(--primary);
    }

    .chat-message {
      margin-bottom: 1rem;
      opacity: 0;
      transform: translateY(10px);
      animation: messageIn 0.5s forwards;
    }

    .chat-message.user {
      text-align: right;
    }

    .chat-message.bot {
      text-align: left;
    }

    .chat-bubble {
      display: inline-block;
      padding: 0.75rem 1rem;
      border-radius: 1rem;
      max-width: 80%;
      word-wrap: break-word;
      font-size: 0.95rem;
    }

    .chat-message.user .chat-bubble {
      background-color: var(--primary);
      color: var(--white);
    }

    .chat-message.bot .chat-bubble {
      background-color: var(--gray-100);
      color: var(--text-dark);
    }

    .typing-indicator {
      display: inline-block;
      width: 60px;
      height: 10px;
      background: var(--gray-100);
      border-radius: 5px;
      position: relative;
    }

    .typing-indicator::after {
      content: '';
      position: absolute;
      width: 10px;
      height: 10px;
      background: var(--primary);
      border-radius: 50%;
      left: 0;
      bottom: 0;
      animation: typingDots 1.5s infinite;
    }

    @keyframes fadeInUp {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }

    @keyframes messageIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }

    @keyframes typingDots {
      0% { left: 0; background: var(--primary); }
      50% { left: 25px; background: var(--secondary); }
      100% { left: 50px; background: var(--primary); }
    }

    footer {
      background-color: var(--text-dark);
      color: white;
      text-align: center;
      padding: 2rem 1rem;
      font-size: 0.9rem;
    }

    .footer-links a {
      margin: 0 1rem;
      color: white;
      font-weight: bold;
    }

    .footer-links a:hover {
      text-decoration: underline;
    }

    @media (max-width: 600px) {
      header h1 {
        font-size: 1.8rem;
      }

      .chat-window {
        max-width: 95%;
      }
    }
  </style>
</head>
<body>

<header>
  <div>
    <h1>Experimente nossos bots na pr√°tica!</h1>
    <p>Teste os diferentes tipos de bots do ChatBoyAI e veja como eles podem ajudar voc√™.</p>
    <button class="cta-button" id="startDemo">Come√ßar Demonstra√ß√£o</button>
  </div>
</header>

<section class="bot-selection" id="bots">
  <!-- Cards ser√£o injetados via JS -->
</section>

<div class="chat-demo" id="chatDemo">
  <div class="chat-window" id="chatWindow">
    <div class="chat-close" onclick="closeChat()">√ó</div>
    <div id="chatMessages"></div>
    <div class="typing-indicator" id="typingIndicator" style="display: none;"></div>
  </div>
</div>

<footer>
  <p>Siga-nos:</p>
  <div class="footer-links">
    <a href="https://discord.gg/9U9WnfF9"  target="_blank">Entrar no Discord</a>
    <a href="https://instagram.com/chatboyai"  target="_blank">@chatboyai no Instagram</a>
  </div>
</footer>

<script>
  const botData = [
    {
      name: "Bot de Modera√ß√£o",
      icon: "üõ°Ô∏è",
      messages: [
        { user: "Tem algu√©m ofendendo aqui.", bot: "Obrigado por reportar! Vou intervir e remover o conte√∫do inadequado." },
        { user: "Algu√©m est√° usando palavras ruins.", bot: "J√° identifiquei e tomei as medidas necess√°rias!" }
      ]
    },
    {
      name: "Bot de Trading",
      icon: "üìà",
      messages: [
        { user: "Qual a tend√™ncia do BTC hoje?", bot: "O Bitcoin est√° em alta de 3%, com volume acima da m√©dia." },
        { user: "Quando vender ETH?", bot: "Minha an√°lise indica que agora √© um bom momento para venda parcial." }
      ]
    },
    {
      name: "Bot Social",
      icon: "üí¨",
      messages: [
        { user: "Preciso de sugest√µes para posts.", bot: "Que tal compartilhar dicas r√°pidas sobre produtividade? Os seguidores adoram!" },
        { user: "Como aumentar engajamento?", bot: "Use enquetes, stories interativas e responda coment√°rios rapidamente!" }
      ]
    },
    {
      name: "Bot de Atendimento",
      icon: "ü§ñ",
      messages: [
        { user: "Como cancelar minha assinatura?", bot: "Acesse Minha Conta > Assinaturas > Cancelar." },
        { user: "N√£o consigo acessar meu perfil.", bot: "Tente redefinir sua senha ou entre em contato com suporte." }
      ]
    },
    {
      name: "Bot de Marketing",
      icon: "üéØ",
      messages: [
        { user: "Como segmentar meus an√∫ncios?", bot: "Use interesses espec√≠ficos, comportamentos e p√∫blico semelhante." },
        { user: "Melhores hor√°rios para campanhas?", bot: "Teste das 10h √†s 12h e das 18h √†s 20h para melhor desempenho." }
      ]
    }
  ];

  const botSelection = document.getElementById('bots');
  const chatDemo = document.getElementById('chatDemo');
  const chatMessages = document.getElementById('chatMessages');
  const typingIndicator = document.getElementById('typingIndicator');

  function createBotCard(bot, index) {
    const card = document.createElement('div');
    card.className = 'bot-card';
    card.innerHTML = `
      <div class="bot-icon">${bot.icon}</div>
      <div class="bot-name">${bot.name}</div>
      <div class="bot-action" onclick="openChat(${index})">Testar</div>
    `;
    return card;
  }

  function openChat(index) {
    const bot = botData[index];
    chatMessages.innerHTML = '';
    chatDemo.style.display = 'flex';

    showTypingEffect(() => {
      bot.messages.forEach((msg, i) => {
        setTimeout(() => {
          addMessage('user', msg.user);
          showTypingEffect(() => {
            addMessage('bot', msg.bot);
          }, 500);
        }, i * 1500);
      });
    }, 500);
  }

  function closeChat() {
    chatDemo.style.display = 'none';
    chatMessages.innerHTML = '';
  }

  function addMessage(sender, text) {
    const div = document.createElement('div');
    div.className = `chat-message ${sender}`;
    div.innerHTML = `<div class="chat-bubble">${text}</div>`;
    chatMessages.appendChild(div);
    chatMessages.scrollTop = chatMessages.scrollHeight;
  }

  function showTypingEffect(callback, delay = 800) {
    typingIndicator.style.display = 'block';
    setTimeout(() => {
      typingIndicator.style.display = 'none';
      if (callback) callback();
    }, delay);
  }

  // Load all bot cards on page load
  window.onload = () => {
    botData.forEach((bot, index) => {
      const card = createBotCard(bot, index);
      botSelection.appendChild(card);
    });

    document.getElementById('startDemo').addEventListener('click', () => {
      window.location.hash = 'bots';
      window.scrollTo({ top: document.getElementById('bots').offsetTop, behavior: 'smooth' });
    });
  };
</script>

</body>
</html>