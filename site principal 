<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>ChatBoyAI</title>

  <!-- Intro.js CSS -->
  <link rel="stylesheet" href="https://unpkg.com/intro.js/minified/introjs.min.css"> 

  <style>
    :root {
      --primary: #6C47FF;
      --secondary: #FF6EC7;
      --bg-light: #f9f9f9;
      --bg-dark: #1a1a2e;
      --text-light: #333;
      --text-dark: #eee;
      --accent: #ffcc00;
    }

    body {
      margin: 0;
      font-family: 'Segoe UI', sans-serif;
      background-color: var(--bg-light);
      color: var(--text-light);
      display: flex;
      flex-direction: column;
      min-height: 100vh;
    }

    .dark-mode {
      background-color: var(--bg-dark);
      color: var(--text-dark);
    }

    header {
      position: sticky;
      top: 0;
      z-index: 1000;
      background: linear-gradient(90deg, var(--primary), var(--secondary));
      color: white;
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 1rem 2rem;
    }

    .logo {
      font-weight: bold;
      font-size: 1.5rem;
    }

    .user-avatar {
      width: 40px;
      height: 40px;
      background: white;
      color: var(--primary);
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: bold;
      cursor: pointer;
    }

    main {
      display: flex;
      flex: 1;
      position: relative;
    }

    nav {
      width: 220px;
      background: var(--bg-dark);
      color: white;
      padding: 2rem 1rem;
      box-shadow: 2px 0 8px rgba(0,0,0,0.2);
    }

    nav button {
      display: block;
      width: 100%;
      padding: 1rem;
      text-align: left;
      background: none;
      border: none;
      color: white;
      font-size: 1rem;
      cursor: pointer;
      transition: background 0.3s ease;
      margin-bottom: 0.5rem;
    }

    nav button.active {
      background: rgba(255,255,255,0.1);
      border-radius: 8px;
    }

    .content {
      flex: 1;
      padding: 2rem;
      overflow-y: auto;
    }

    .section {
      display: none;
    }

    .section.active {
      display: block;
      animation: fadeInUp 0.5s ease forwards;
    }

    @keyframes fadeInUp {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }

    .summary-card {
      display: flex;
      gap: 1rem;
      flex-wrap: wrap;
    }

    .summary-item {
      flex: 1;
      min-width: 200px;
      background: var(--primary);
      color: white;
      padding: 1rem;
      border-radius: 10px;
      text-align: center;
    }

    .card {
      background: white;
      border-radius: 12px;
      padding: 1.5rem;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
      margin-bottom: 1.5rem;
    }

    .bar-chart {
      height: 100px;
      display: flex;
      align-items: flex-end;
      gap: 10px;
      margin-top: 1rem;
    }

    .bar {
      flex: 1;
      background: white;
      height: 0;
      transition: height 0.6s ease;
    }

    .chat-window {
      background: #f0f0f0;
      border-radius: 10px;
      padding: 1rem;
      height: 400px;
      overflow-y: auto;
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
    }

    .message {
      max-width: 70%;
      padding: 0.75rem 1rem;
      border-radius: 15px;
      line-height: 1.4;
      font-size: 0.95rem;
    }

    .user-message {
      align-self: flex-end;
      background: var(--primary);
      color: white;
    }

    .bot-message {
      align-self: flex-start;
      background: #ddd;
      color: #333;
    }

    .chat-input {
      display: flex;
      gap: 0.5rem;
      margin-top: 1rem;
    }

    .chat-input input {
      flex: 1;
      padding: 0.75rem;
      border-radius: 20px;
      border: 1px solid #ccc;
      font-size: 1rem;
    }

    .chat-input button {
      padding: 0.75rem 1.2rem;
      border: none;
      background: var(--primary);
      color: white;
      border-radius: 20px;
      cursor: pointer;
      font-weight: bold;
    }

    .chat-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 1rem;
    }

    .toggle-fullscreen {
      background: none;
      border: 1px solid white;
      color: white;
      padding: 0.5rem 1rem;
      border-radius: 8px;
      cursor: pointer;
    }

    .fullscreen {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: 1001;
      background: white;
      color: black;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      padding: 1rem;
    }

    .settings-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 1.5rem;
    }

    .toggle-group {
      display: flex;
      justify-content: space-between;
      align-items: center;
      background: #f0f0f0;
      padding: 0.75rem;
      border-radius: 10px;
    }

    .terminal {
      background: #111;
      color: #0f0;
      padding: 1rem;
      border-radius: 10px;
      height: 200px;
      overflow-y: auto;
      margin-top: 1rem;
      font-family: monospace;
    }

    .command-list {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
      margin-top: 0.5rem;
    }

    .command-btn {
      background: var(--primary);
      color: white;
      padding: 0.4rem 0.8rem;
      border: none;
      border-radius: 6px;
      cursor: pointer;
    }

    .pricing-cards {
      display: flex;
      gap: 1rem;
      margin-top: 1rem;
      flex-wrap: wrap;
      justify-content: center;
    }

    .pricing-card {
      background: white;
      border-radius: 12px;
      padding: 1.5rem;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
      flex: 1;
      min-width: 250px;
      max-width: 300px;
      text-align: center;
    }

    .pricing-card h3 {
      color: var(--primary);
    }

    .bot-cards {
      display: flex;
      flex-wrap: wrap;
      gap: 1rem;
      margin-top: 1rem;
    }

    .bot-card {
      background: white;
      border-radius: 12px;
      padding: 1rem;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
      flex: 1;
      min-width: 200px;
      max-width: 250px;
      text-align: center;
    }

    .avatar-container {
      position: relative;
      width: 150px;
      height: 150px;
      margin: 1rem auto;
    }

    .avatar-part {
      position: absolute;
      transition: all 0.3s ease;
    }

    footer {
      text-align: center;
      padding: 1rem;
      background: var(--bg-dark);
      color: white;
    }

    a {
      color: var(--accent);
      text-decoration: none;
    }

    a:hover {
      text-decoration: underline;
    }

    /* Responsive */
    @media (max-width: 768px) {
      main {
        flex-direction: column;
      }

      nav {
        width: 100%;
        flex-shrink: 0;
      }

      .summary-card {
        flex-direction: column;
      }
    }
  </style>
</head>
<body data-intro="Bem-vindo ao ChatBoyAI!" data-intro-position="top">

  <header>
    <div class="logo">ChatBoyAI</div>
    <div class="user-avatar" title="Usuário">AB</div>
  </header>

  <main>
    <nav>
      <button id="btn-inicio" class="active">Início</button>
      <button id="btn-chat">Bate-papo</button>
      <button id="btn-configuracoes">Configurações</button>
    </nav>

    <div class="content">
      <section id="inicio" class="section active">
        <h2>Início</h2>
        <div class="summary-card">
          <div class="summary-item">
            <h3>Total de mensagens enviadas</h3>
            <p id="total-msgs">0</p>
          </div>
          <div class="summary-item">
            <h3>Usuários ativos</h3>
            <p id="usuarios-online">0</p>
          </div>
          <div class="summary-item">
            <h3>Sentimento médio</h3>
            <p id="sentimento">Neutro</p>
          </div>
        </div>
        <div class="card">
          <h3>Mensagens por dia</h3>
          <div class="bar-chart" id="bar-chart">
            <div class="bar" style="height: 0%"></div>
            <div class="bar" style="height: 0%"></div>
            <div class="bar" style="height: 0%"></div>
            <div class="bar" style="height: 0%"></div>
            <div class="bar" style="height: 0%"></div>
          </div>
        </div>
      </section>

      <section id="chat" class="section">
        <div class="chat-header">
          <h2>Bate-papo</h2>
          <button class="toggle-fullscreen" onclick="toggleFullscreen()">Entrar em Tela Cheia</button>
        </div>
        <div class="chat-window" id="chat-window">
          <!-- Messages will appear here -->
        </div>
        <div class="chat-input">
          <input type="text" id="chat-input" placeholder="Digite sua mensagem..." onkeydown="handleEnter(event)" />
          <button onclick="sendMessage()">Enviar</button>
        </div>
      </section>

      <section id="configuracoes" class="section">
        <h2>Configurações</h2>
        <div class="card settings-grid">
          <div class="toggle-group">
            <label>Modo Escuro / Claro</label>
            <input type="checkbox" id="dark-mode-toggle" onchange="toggleDarkMode()">
          </div>
          <div class="toggle-group">
            <label>Fontes</label>
            <select>
              <option>Padrão</option>
              <option>Arial</option>
              <option>Monospace</option>
            </select>
          </div>
          <div class="toggle-group">
            <label>Sons de mensagem</label>
            <input type="checkbox" checked>
          </div>
          <div class="toggle-group">
            <label>Tradução Automática</label>
            <input type="checkbox">
          </div>
          <div class="toggle-group">
            <label>Mensagens Autodestrutivas</label>
            <input type="checkbox">
          </div>
          <div class="toggle-group">
            <label>Texto-para-Voz</label>
            <input type="checkbox">
          </div>
          <div class="toggle-group">
            <label>Central de Comandos</label>
            <button onclick="openTerminal()">Abrir</button>
          </div>
          <div class="toggle-group">
            <label>Ver Planos Premium</label>
            <button onclick="showPremiumPlans()">Ver</button>
          </div>
        </div>

        <div id="terminal-section" class="card" style="display:none;">
          <h3>Central de Comandos</h3>
          <div class="terminal" id="terminal-output">Bem-vindo à Central de Comandos.</div>
          <div class="command-list">
            <button class="command-btn" onclick="runCommand('/ajuda')">/ajuda</button>
            <button class="command-btn" onclick="runCommand('/test')">/test</button>
            <button class="command-btn" onclick="runCommand('/banir @usuario')">/banir @usuario</button>
          </div>
        </div>

        <div id="premium-section" class="card" style="display:none;">
          <h3>Planos Premium</h3>
          <div class="pricing-cards">
            <div class="pricing-card">
              <h3>Plano Básico</h3>
              <p>R$9,90/mês</p>
              <ul>
                <li>Até 3 bots</li>
                <li>Respostas médias</li>
                <li>Personalização básica</li>
              </ul>
              <button>Selecionar Plano</button>
            </div>
            <div class="pricing-card">
              <h3>Plano Avançado</h3>
              <p>R$19,90/mês</p>
              <ul>
                <li>Bots ilimitados</li>
                <li>IA avançada</li>
                <li>Personalização visual completa</li>
              </ul>
              <button>Selecionar Plano</button>
            </div>
            <div class="pricing-card">
              <h3>Plano Empresarial</h3>
              <p>R$49,90/mês</p>
              <ul>
                <li>Tudo do Avançado</li>
                <li>Suporte prioritário</li>
                <li>Integrações externas</li>
              </ul>
              <button>Selecionar Plano</button>
            </div>
          </div>
        </div>

        <div class="card">
          <h3>Demonstração de Bots</h3>
          <div class="bot-cards">
            <div class="bot-card">
              <h4>Moderação</h4>
              <p>Gerencia conversas e regras.</p>
              <button onclick="simulateBotChat('Moderação')">Testar</button>
            </div>
            <div class="bot-card">
              <h4>Atendimento</h4>
              <p>Suporte rápido e eficiente.</p>
              <button onclick="simulateBotChat('Atendimento')">Testar</button>
            </div>
            <div class="bot-card">
              <h4>Tradução</h4>
              <p>Traduz mensagens automaticamente.</p>
              <button onclick="simulateBotChat('Tradução')">Testar</button>
            </div>
            <div class="bot-card">
              <h4>Trading</h4>
              <p>Informações sobre criptomoedas.</p>
              <button onclick="simulateBotChat('Trading')">Testar</button>
            </div>
            <div class="bot-card">
              <h4>Engajamento Social</h4>
              <p>Promove interações entre usuários.</p>
              <button onclick="simulateBotChat('Engajamento Social')">Testar</button>
            </div>
          </div>
        </div>

        <div class="card">
          <h3>Personalizar Bot</h3>
          <div class="avatar-container">
            <img src="https://placehold.co/150x150?text=Bot" alt="Bot Avatar" class="avatar-part" id="avatar-base" />
            <img src="https://placehold.co/150x150/FFD700?text=Camisa" alt="Camisa" class="avatar-part" id="avatar-shirt" style="display:none;" />
            <img src="https://placehold.co/150x150/4682B4?text=Calça" alt="Calça" class="avatar-part" id="avatar-pants" style="display:none;" />
            <img src="https://placehold.co/150x150/228B22?text=Tênis" alt="Tênis" class="avatar-part" id="avatar-shoes" style="display:none;" />
            <img src="https://placehold.co/150x150/8A2BE2?text=Chapéu" alt="Chapéu" class="avatar-part" id="avatar-hat" style="display:none;" />
            <img src="https://placehold.co/150x150/DC143C?text=Óculos" alt="Óculos" class="avatar-part" id="avatar-glasses" style="display:none;" />
            <img src="https://placehold.co/150x150/FF8C00?text=Mochila" alt="Mochila" class="avatar-part" id="avatar-backpack" style="display:none;" />
            <img src="https://placehold.co/150x150/00CED1?text=Skin" alt="Skin" class="avatar-part" id="avatar-skin" style="display:none;" />
          </div>
          <div class="settings-grid">
            <div>
              <h4>Camisas</h4>
              <button onclick="applyAccessory('shirt')">Adicionar Camisa</button>
            </div>
            <div>
              <h4>Calças</h4>
              <button onclick="applyAccessory('pants')">Adicionar Calça</button>
            </div>
            <div>
              <h4>Tênis</h4>
              <button onclick="applyAccessory('shoes')">Adicionar Tênis</button>
            </div>
            <div>
              <h4>Chapéus</h4>
              <button onclick="applyAccessory('hat')">Adicionar Chapéu</button>
            </div>
            <div>
              <h4>Óculos</h4>
              <button onclick="applyAccessory('glasses')">Adicionar Óculos</button>
            </div>
            <div>
              <h4>Mochilas</h4>
              <button onclick="applyAccessory('backpack')">Adicionar Mochila</button>
            </div>
            <div>
              <h4>Skins</h4>
              <button onclick="applyAccessory('skin')">Adicionar Skin</button>
            </div>
          </div>
          <div style="margin-top: 1rem;">
            <button onclick="saveStyle()">Salvar Visual</button>
            <button onclick="resetStyle()">Resetar Estilo</button>
          </div>
        </div>

        <div class="card">
          <h3>InsightAI - Análise Avançada</h3>
          <canvas id="insight-chart" width="400" height="200"></canvas>
        </div>
      </section>
    </div>
  </main>

  <footer>
    <p>© 2025 ChatBoyAI – Todos os direitos reservados</p>
    <p>
      <a href="https://discord.gg/9U9WnfF9" target="_blank">Discord</a> | 
      <a href="#" target="_blank">@chatboyai</a> 
    </p>
  </footer>

  <!-- Intro.js JS -->
  <script src="https://unpkg.com/intro.js/minified/introjs.min.js"></script> 

  <script>
    const sections = ['inicio', 'chat', 'configuracoes'];
    const buttons = ['btn-inicio', 'btn-chat', 'btn-configuracoes'];

    function showSection(id) {
      // Hide all sections
      sections.forEach(sec => {
        document.getElementById(sec).classList.remove('active');
      });
      // Remove active from all buttons
      buttons.forEach(btn => {
        document.getElementById(btn).classList.remove('active');
      });
      // Show current section and highlight button
      document.getElementById(id).classList.add('active');
      document.getElementById(`btn-${id}`).classList.add('active');
    }

    // Attach click handlers
    document.getElementById('btn-inicio').addEventListener('click', () => showSection('inicio'));
    document.getElementById('btn-chat').addEventListener('click', () => showSection('chat'));
    document.getElementById('btn-configuracoes').addEventListener('click', () => showSection('configuracoes'));

    // Dashboard stats
    let totalMsgs = 0;
    function updateDashboard() {
      document.getElementById('total-msgs').textContent = totalMsgs;
      document.getElementById('usuarios-online').textContent = Math.floor(Math.random() * 20) + 1;
      const sentiment = ['Positivo', 'Neutro', 'Negativo'][Math.floor(Math.random() * 3)];
      document.getElementById('sentimento').textContent = sentiment;

      const bars = document.querySelectorAll('.bar');
      bars.forEach(bar => {
        const height = Math.random() * 100;
        bar.style.height = `${height}%`;
      });
    }

    setInterval(updateDashboard, 5000);
    updateDashboard();

    // Chat logic
    function sendMessage() {
      const input = document.getElementById('chat-input');
      const message = input.value.trim();
      if (!message) return;

      addMessage(message, 'user');
      input.value = '';
      totalMsgs++;
      updateDashboard();

      setTimeout(() => {
        const replies = [
          "Entendi! Como posso ajudar?",
          "Essa é uma ótima pergunta!",
          "Vamos verificar isso para você.",
          "Hmm... pensando...",
          "Preciso de mais detalhes."
        ];
        addMessage(replies[Math.floor(Math.random() * replies.length)], 'bot');
      }, 1000);
    }

    function addMessage(text, type) {
      const chatWindow = document.getElementById('chat-window');
      const msgDiv = document.createElement('div');
      msgDiv.classList.add('message');
      msgDiv.classList.add(type === 'user' ? 'user-message' : 'bot-message');
      msgDiv.textContent = text;
      chatWindow.appendChild(msgDiv);
      chatWindow.scrollTop = chatWindow.scrollHeight;
    }

    function handleEnter(e) {
      if (e.key === 'Enter') sendMessage();
    }

    // Fullscreen toggle
    function toggleFullscreen() {
      const chatSection = document.getElementById('chat');
      const btn = document.querySelector('.toggle-fullscreen');
      if (!document.fullscreenElement) {
        chatSection.classList.add('fullscreen');
        btn.textContent = 'Sair da Tela Cheia';
      } else {
        chatSection.classList.remove('fullscreen');
        btn.textContent = 'Entrar em Tela Cheia';
        document.exitFullscreen();
      }
    }

    // Dark mode toggle
    function toggleDarkMode() {
      document.body.classList.toggle('dark-mode');
    }

    // Terminal simulation
    function openTerminal() {
      document.getElementById('terminal-section').style.display = 'block';
    }

    function runCommand(cmd) {
      const output = document.getElementById('terminal-output');
      output.innerHTML += `<br>> ${cmd}<br>`;
      if (cmd === '/ajuda') {
        output.innerHTML += 'Comandos disponíveis: /ajuda, /test, /banir @usuario<br>';
      } else if (cmd === '/test') {
        output.innerHTML += 'Sistema funcionando normalmente.<br>';
      } else if (cmd.startsWith('/banir')) {
        const user = cmd.split('@')[1];
        output.innerHTML += `Usuário @${user} banido com sucesso.<br>`;
      }
      output.scrollTop = output.scrollHeight;
    }

    // Show premium plans
    function showPremiumPlans() {
      document.getElementById('premium-section').style.display = 'block';
    }

    // Avatar customization
    function applyAccessory(part) {
      const el = document.getElementById(`avatar-${part}`);
      el.style.display = el.style.display === 'none' ? 'block' : 'none';
    }

    function saveStyle() {
      alert("Visual salvo com sucesso!");
    }

    function resetStyle() {
      document.querySelectorAll('.avatar-part').forEach(el => {
        if (el.id !== 'avatar-base') el.style.display = 'none';
      });
    }

    function simulateBotChat(botName) {
      alert(`Simulando chat com o bot "${botName}"`);
    }

    // ChartJS for InsightAI
    const ctx = document.getElementById('insight-chart').getContext('2d');
    new Chart(ctx, {
      type: 'line',
      data: {
        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May'],
        datasets: [{
          label: 'Análise de Mensagens',
          data: [12, 19, 3, 5, 2],
          borderColor: '#6C47FF',
          fill: false,
          tension: 0.4
        }]
      },
      options: {
        responsive: true,
        scales: {
          y: {
            beginAtZero: true
          }
        }
      }
    });

    // Intro tour
    window.onload = function() {
      introJs().setOptions({
        tooltipPosition: 'auto',
        buttons: ['prev', 'next', 'done'],
        prevLabel: 'Voltar',
        nextLabel: 'Próximo',
        doneLabel: 'Entendi',
        tooltipClass: 'introjs-tooltip',
        highlightClass: 'introjs-highlight',
        exitOnOverlayClick: false,
        showProgress: true
      }).start();
    };
  </script>
</body>
</html>